#!/usr/bin/env bash
# ════════════════════════════════════════════════════════════════
# 📚 Severforge Session Documentation Viewer
# Authors: Amish × Pisces × Claude
# Quick access to collaboration session logs
# ════════════════════════════════════════════════════════════════

BASE="$HOME/Severforge"
DOCS_DIR="$BASE/docs"

show_usage() {
  echo ""
  echo "Usage: sf sessions [COMMAND]"
  echo ""
  echo "Commands:"
  echo "  list        List all session documents (default)"
  echo "  latest      View the most recent session"
  echo "  <date>      View session from specific date (e.g., 2025-10-30)"
  echo "  search <term>  Search for term across all sessions"
  echo ""
  echo "Examples:"
  echo "  sf sessions              # List all sessions"
  echo "  sf sessions latest       # View most recent"
  echo "  sf sessions 2025-10-30   # View specific date"
  echo "  sf sessions search bug   # Find sessions mentioning 'bug'"
  echo ""
}

list_sessions() {
  echo ""
  echo "📚 Available Session Documentation:"
  echo "════════════════════════════════════════════════════════════════"
  
  if ! ls "$DOCS_DIR"/SESSION_*.md >/dev/null 2>&1; then
    echo "No session documents found."
    return
  fi
  
  ls -lt "$DOCS_DIR"/SESSION_*.md | while read -r line; do
    file=$(echo "$line" | awk '{print $NF}')
    filename=$(basename "$file")
    date=$(echo "$filename" | sed 's/SESSION_\(.*\)_.*/\1/')
    
    # Extract title from file
    title=$(grep -m1 "^# " "$file" | sed 's/^# //')
    
    echo "📄 $date - $title"
    echo "   $file"
    echo ""
  done
  
  echo "════════════════════════════════════════════════════════════════"
}

view_latest() {
  local latest=$(ls -t "$DOCS_DIR"/SESSION_*.md 2>/dev/null | head -1)
  
  if [[ -z "$latest" ]]; then
    echo "❌ No session documents found"
    exit 1
  fi
  
  echo ""
  echo "📄 Viewing latest session: $(basename "$latest")"
  echo "════════════════════════════════════════════════════════════════"
  echo ""
  cat "$latest"
}

view_by_date() {
  local date="$1"
  local matches=$(ls "$DOCS_DIR"/SESSION_${date}*.md 2>/dev/null)
  
  if [[ -z "$matches" ]]; then
    echo "❌ No session found for date: $date"
    exit 1
  fi
  
  local count=$(echo "$matches" | wc -l)
  
  if [[ $count -gt 1 ]]; then
    echo "⚠️  Multiple sessions found for $date:"
    echo "$matches"
    echo ""
    echo "Please be more specific (include time if needed)"
    exit 1
  fi
  
  echo ""
  echo "📄 Viewing session: $(basename "$matches")"
  echo "════════════════════════════════════════════════════════════════"
  echo ""
  cat "$matches"
}

search_sessions() {
  local term="$1"
  
  if [[ -z "$term" ]]; then
    echo "❌ Please provide a search term"
    exit 1
  fi
  
  echo ""
  echo "🔍 Searching for: '$term'"
  echo "════════════════════════════════════════════════════════════════"
  echo ""
  
  grep -l -i "$term" "$DOCS_DIR"/SESSION_*.md 2>/dev/null | while read -r file; do
    echo "📄 Found in: $(basename "$file")"
    grep -i -C2 --color=always "$term" "$file" | head -20
    echo ""
    echo "────────────────────────────────────────────────────────────────"
    echo ""
  done
}

# Main
case "${1:-list}" in
  list)
    list_sessions
    ;;
  latest)
    view_latest
    ;;
  search)
    search_sessions "${2:-}"
    ;;
  --help|-h)
    show_usage
    ;;
  *)
    # Try to view by date
    view_by_date "$1"
    ;;
esac
