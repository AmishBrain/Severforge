#!/usr/bin/env bash
# ============================================================
# ü©∫ Severforge Status Monitor (Auto-Healing Edition)
# Version: 2.0.0
# Authors: Amish üß† & Pisces ‚öôÔ∏è
# ============================================================

CORE_DIR="$HOME/Severforge"
HASH_DIR="$CORE_DIR/config"
mkdir -p "$HASH_DIR"

BASELINE="$HASH_DIR/integrity_baseline.txt"
CURRENT_TMP="/tmp/sf_integrity.$$"

# --- COLORS ---
green=$(printf '\033[32m'); red=$(printf '\033[31m')
yellow=$(printf '\033[33m'); cyan=$(printf '\033[36m'); reset=$(printf '\033[0m')

# ============================================================
# 1Ô∏è‚É£  INTEGRITY CHECK (SMART, ORDER-INDEPENDENT)
# ============================================================

echo "üîß Rebuilding integrity baseline snapshot..."
find "$CORE_DIR/scripts" -type f -exec sha256sum {} \; | sort > "$CURRENT_TMP"

if [ ! -f "$BASELINE" ]; then
  echo "üÜï No baseline found ‚Äî creating fresh one."
  cp "$CURRENT_TMP" "$BASELINE"
  INTEGRITY_STATUS="OK"
else
  sort "$BASELINE" > /tmp/sf_base_sorted.$$
  sort "$CURRENT_TMP" > /tmp/sf_cur_sorted.$$
  DIFF_OUTPUT=$(diff -u --suppress-common-lines /tmp/sf_base_sorted.$$ /tmp/sf_cur_sorted.$$)
  rm -f /tmp/sf_base_sorted.$$ /tmp/sf_cur_sorted.$$

  if [ -n "$DIFF_OUTPUT" ]; then
    echo "üî¥ Integrity Alert ‚Äî script modifications detected!"
    echo "$DIFF_OUTPUT" | sed 's/^/   /'
    INTEGRITY_STATUS="FAIL"
    echo ""
    read -rp $'‚ö†Ô∏è  Re-sign baseline automatically? (y/N): ' resp
    if [[ "$resp" =~ ^[Yy]$ ]]; then
      cp "$CURRENT_TMP" "$BASELINE"
      INTEGRITY_STATUS="OK"
      echo "‚úÖ Baseline re-signed successfully."
    fi
  else
    INTEGRITY_STATUS="OK"
  fi
fi

rm -f "$CURRENT_TMP"
echo ""

# ============================================================
# 2Ô∏è‚É£  SYSTEM STATUS OVERVIEW
# ============================================================
echo "‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ"
echo "‚îÇ      üîç  SEVERFORGE SYSTEM STATUS CHECK       ‚îÇ"
echo "‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ"
echo ""

version_file="$CORE_DIR/version.txt"
version=$(cat "$version_file" 2>/dev/null || echo "v2.0.0 (untracked)")
echo "üß© Version: ${cyan}$version${reset}"
echo "üïê Uptime: ${green}$(uptime -p)${reset}"

log_count=$(find "$CORE_DIR/logs" -type f 2>/dev/null | wc -l)
ev_count=$(find "$CORE_DIR/evidence" -mindepth 1 -type d 2>/dev/null | wc -l)

echo "üìú Logs present: ${yellow}$log_count${reset}"
echo "üßæ Evidence sets: ${yellow}$ev_count${reset}"

missing=()
for dir in "$CORE_DIR/logs" "$CORE_DIR/evidence" "$CORE_DIR/config"; do
  [[ ! -d "$dir" ]] && missing+=("$dir")
done

if [[ ${#missing[@]} -gt 0 ]]; then
  echo "${red}‚ö† Missing directories:${reset}"
  for m in "${missing[@]}"; do echo "  - $m"; done
else
  echo "${green}‚úÖ All critical directories present${reset}"
fi

# ============================================================
# 3Ô∏è‚É£  MOOD ENGINE
# ============================================================
hour=$((10#$(date +%H)))  # Fix for octal error
if (( hour < 12 )); then
  mood="üåÖ  Awakening ‚Äî systems warming up."
elif (( hour < 18 )); then
  mood="üî•  Stable ‚Äî forging at optimal heat."
elif (( hour < 22 )); then
  mood="‚ö°  Reactive ‚Äî energy surging through circuits."
else
  mood="üåí  Cooling Down ‚Äî quiet hums in the dark."
fi

echo ""
echo "ü©µ Forge Mood: $mood"
echo ""
echo "Done at: $(date)"
echo "‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ"

cycle=$(( (10#$(date +%j) + 10#$(date +%s) / 86400) % 9999 ))
signature_pool=("DAEMONSONG" "IRONCURRENT" "NEURALFLOW" "AETHERFLUX" "CHROMAFIELD")
signature=${signature_pool[$((cycle % ${#signature_pool[@]}))]}

echo ""
echo "‚ôªÔ∏è  Forge Cycle: ${cycle}  |  Signature: [AMISH √ó PISCES ‚Äî ${signature}]"
echo ""

if [ "$INTEGRITY_STATUS" = "OK" ]; then
  echo "üß†  Integrity verified ‚Äî the forge remembers."
else
  echo "üíî  Integrity uncertain ‚Äî forge requires calibration."
fi
echo ""
